
@{
    ViewBag.Title = "New Sale";
}
<link href="~/Content/UI/indexes.css" rel="stylesheet" />
<h2>@ViewBag.Title</h2>
<div class="root cart">
    <div class="cart-action">
        <table class="table table-striped table-responsive">
            <thead class="bg-secondary text-white-50" style="text-align:center; background-color:dimgray;">

            </thead>
            <tbody>
                <tr>
                    <td style="padding:10px;" class="field ui left icon input">
                        <input class="form-control  rounded" type="text" id="getItemname" name="ItemName" 
                               placeholder="ITEM NAME" autocomplete="on" 
                               onchange = "getContents(this.value)" />
                    </td>
              
                    <td style="padding:10px;" class="field ui left icon input">
                        <input class="form-control rounded form-control input-sm NumbersOnly" 
                               type="text" id="getQtyRequested" name="QtyRqstd" placeholder="QUANTITY" 
                               onchange = "getContents(this.value)"/>
                    </td>
                    <td style="padding:10px;" class="field ui left icon input">
                        <input class="form-control rounded form-control" type="text" id="getPrice" name="GetPrice" 
                               placeholder="PRICE" onchange = "getContents(this.value)" />
                    </td>
                    <td style="padding:10px;" class="field ui left icon input">
                        <input class="form-control rounded form-control" type="text" id="getCustomer" name="Customer" 
                               placeholder="CUSTOMER" onchange = "getContents(this.value)" />
                    </td>
                    <td class="field ui left icon input">
                        <input type="submit" value="ADD" class="ui button primary" id="addToCartBtn" />
                    </td>
                </tr>
            </tbody>
        </table>

        <hr />

        @using (Html.BeginForm("NewSale", "Sales", FormMethod.Post, new { @class = "ui form root", role = "form" }))
        {

            @Html.AntiForgeryToken()

            <div>
                <table class="table table-striped table-hover" style="min-width:100%">
                    <thead class="bg-dark text-white">
                        <tr>
                            <th>ITEM NAME</th>
                            <th>QUANTITY</th>
                            <th>PRICE</th>
                            <th>CUSTOMER</th>
                            <th>
                                DELETE
                                <span class="fa fa-trash"></span>
                            </th>
                        </tr>
                    </thead>
                    <tbody id="cartItemsTable"></tbody>
                </table>
            </div>

            <div>
                <input type="submit" value="SAVE" class="ui button success" id="createNoteBtn" />
            </div>
        }
    </div>
</div>

<script>
    $(document).ready(() => {
        //Get Item
        $("#getItemname").autocomplete({
            source: function (request, response) {
               var url =  "@Url.Action("GetItemName","Inventory")";
                /*
                 request = searches for the "getItemname's" value from GetSourceList action method.
                 response = returns the response from the GetSourceList method.
                 */
                $.ajax({
                url: url, type: "GET", dataType: "json", cache: false, contentType: "application/json; charset=utf-8",
                    data: { getItemname: request.term },
   
                    success: function (data) {
                         response($.map(data, function (item) {

                        return {label: item.label, value: item.value };
                         }));

                    }

                })

            },
            select: function (event, ui) {
            event.preventDefault();

                var urldetails = "@Url.Action("GetItemDetails","Inventory")";

            $.ajax({
                cache: false, async: false, type: "GET",
                url: urldetails,
                 data: { getItemname: ui.item.value },
                success: function (data) {
                    var item = data;

                    $("#getItemname").val(item.Item_Name);
                    $("#getPrice").val(item.DummyPrice);
                    
                },
                error: function (request, ajaxOptions, thrownError) {
                   alert('Failed to retrieve Item.');
                }
            });
            }


        });//End of Auto complete

        //Add To Cart Function
        $('#addToCartBtn').on('click',function () {
                //check for Quantity requested
                    if ($('#getQtyRequested').val() == ''  || $('#getQtyRequested').val() == 0 || !$.isNumeric($('#getQtyRequested').val())) {
                        alert("Quantity cannot be empty!.");
            }

                //check for duplication
                if (CheckStockDuplication($('#getItemnumber').val())) {
                    alert("Record already exists, quantity requested will increase with the new quantity!.")
                    //alert("Redundant Record", 'This Stock has already been added. If you want to re-enter, please remove it form the list first!', "error");
                }
                else {
                    var $cartTable = $('#cartItemsTable');

                    $cartTable.append(
                        '<tr class="dynamicRows">' +
                        '<td><input type="hidden" name="ItemName" class = "getItemName"    value="' + $('#getItemname').val() + '"/>' + $('#getItemname').val() + '</td>' +
                        '<td><input type="hidden" name="QtyRqstd" class = "getQtyRequested"     value="' + $('#getQtyRequested').val() + '"  style="width:60px;"/>' + $('#getQtyRequested').val() + '</td>' +
                        '<td><input type="hidden" name="ItemPrice" class = "getItemprice"      value="' + $('#getPrice').val() + '"/>' + $('#getPrice').val() + '</td>' +
                        '<td><input type="hidden" name="ItemCustomer" class = "getItemCustomer"      value="' + $('#getCustomer').val() + '"/>' + $('#getCustomer').val() + '</td>' +

                        //Delete icon
                        '<td><a class="fa fa-trash" style="color:red;" onClick="removeItem(this)">Delete</a></td>'
                        + '</tr>'
                    );

                    //cleans form
                    $(function () {
                        $clear = '';
                        $('#getItemname').val('');
                        $('#getPrice').val('');
                        $('#getQtyRequested').val('');
                    });

                    return false;

                }

            })
        //Add To Cart END

        //Remove Item
            //removes record on clicking remove icon
            $(function removeItem() {
               // $(obj).parent().parent().remove();
                $(this).closest('tr .dynamicRows').remove();
                //$(this).closest('tr').remove();
            });
        //Remove Item END

        //Check for Duplicates
         function CheckStockDuplication(itemNo) {
            var flag = false;



            $('.dynamicRows').each(function () {
                if ($(this).find('.getItemnumber').val() == itemNo) {

                    var quant = Number($('#getQtyRequested').val());


                    var oldquant = Number($(this).find('td:eq(2) input:hidden').val());


                    var newquant = quant + oldquant;


                    // $(this).find('td:eq(11) input:hidden').val(newquant);
                    //$(this).find('.txtqty').text(newquant);

                    var inputstring = $('<input type="hidden" name="QtyRqstd" class="getQtyRequested" value="' + newquant + '" style="width:60px;"/>');

                    var textvalue = newquant;

                    $(this).find('td:eq(2)').text("");

                    $(this).find('td:eq(2)').append(inputstring);

                    $(this).find('td:eq(2)').append(textvalue);



                    flag = true;


                    $('#getItemnumber').val('');
                    $('#getItemname').val('');

                }
            });//End of duplication check
            return flag;
        };
        //Check for Duplicates END


    })//End of Document function

    function getItemName(val) {
        var url_ = "/Sales/GetItemName/" + val;

      //  debugger

        $.ajax({
            url: url_,
            data: { getItemname: val },
            dataType: "json",
            type: "GET",
            error: () => {
                alert("Failed to fetch item!.");
            },
            success: (data) => {
                //gfDrop = document.querySelector("#collectedBill_GFS_CodeId");
                itemName = document.querySelector("#getItemname")

                while (gfDrop.firstChild) {
                    gfDrop.removeChild(gfDrop.firstChild);
                }

                var gfoption = '<option value="' + 0 + '">' +
                    "--Select GFS Codes--" +
                    '</option>';

                $("#collectedBill_GFS_CodeId").append(gfoption);

                $.each(data, (item) => {

                    //console.log(item);
                    var gfoptions = '<option value="' +
                        data[item].id + '">' +
                        data[item].CodeNumber +
                        '</option>';

                    $("#collectedBill_GFS_CodeId").append(gfoptions);
                });
            }

        });
    }
</script>

